// <auto-generated />
using System;
using BookingsApplication.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingsApplication.API.Migrations
{
    [DbContext(typeof(BookingAppDBcontext))]
    [Migration("20240919115427_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingsApplication.API.Models.Domains.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfTickets")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BookingsApplication.API.Models.Domains.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketPrice")
                        .HasColumnType("int");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d290f1ee-6c54-4b01-90e6-d701748f0851"),
                            Artist = "The Rolling Stones",
                            Category = "Concert",
                            DateTime = new DateTime(2024, 10, 15, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "An electrifying night with the biggest rock bands!",
                            Name = "Rock The Night",
                            TicketPrice = 99,
                            Venue = "Madison Square Garden, New York"
                        },
                        new
                        {
                            Id = new Guid("3fa85f64-5717-4562-b3fc-2c963f66afa6"),
                            Artist = "Dave Chappelle",
                            Category = "Comedy Show",
                            DateTime = new DateTime(2024, 11, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A hilarious stand-up comedy night featuring top comedians.",
                            Name = "Laugh Riot",
                            TicketPrice = 49,
                            Venue = "The Comedy Store, Los Angeles"
                        },
                        new
                        {
                            Id = new Guid("a34b1f0a-7c5e-4df5-a312-fc90bbd6356d"),
                            Artist = "London Shakespeare Company",
                            Category = "Theater",
                            DateTime = new DateTime(2024, 12, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A modern rendition of the classic play, Hamlet.",
                            Name = "Shakespeare's Hamlet",
                            TicketPrice = 120,
                            Venue = "The Globe Theatre, London"
                        },
                        new
                        {
                            Id = new Guid("d81b2f5e-9c1e-4817-b6c5-bc3b146b2177"),
                            Artist = "Herbie Hancock",
                            Category = "Concert",
                            DateTime = new DateTime(2024, 10, 20, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A smooth jazz evening with international jazz artists.",
                            Name = "Jazz Vibes",
                            TicketPrice = 79,
                            Venue = "Blue Note, Tokyo"
                        },
                        new
                        {
                            Id = new Guid("e4b1d89f-8272-4a2b-b8b8-2276f497912b"),
                            Artist = "David Copperfield",
                            Category = "Magic Show",
                            DateTime = new DateTime(2024, 10, 31, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A night of mind-bending magic and illusions.",
                            Name = "Illusions Unveiled",
                            TicketPrice = 150,
                            Venue = "Caesars Palace, Las Vegas"
                        });
                });

            modelBuilder.Entity("BookingsApplication.API.Models.Domains.Booking", b =>
                {
                    b.HasOne("BookingsApplication.API.Models.Domains.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });
#pragma warning restore 612, 618
        }
    }
}
